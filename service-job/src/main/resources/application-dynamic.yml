eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
    preferIpAddress: true
    instanceId: ${spring.cloud.client.ip-address}:${server.port}
  client:
    serviceUrl:
      defaultZone: http://dev.java110.com:8761/eureka/
      #defaultZone: http://localhost:8761/eureka/
server:
  port: 8013
  tomcat:
    uri-encoding: UTF-8



spring:
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  application:
    name: job-service
  redis:
    database: 0
    host: dev.redis.java110.com
    port: ${redisport:6379}
    password: ${redispwd}
    pool:
      max-active: 300
      max-wait: 10000
      max-idle: 100
      min-idle: 0
      timeout: 0
  datasource:
    url: jdbc:mysql://dev.db.java110.com:3306/TT?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
    username: TT
    password: ${mysqlpwd}
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 5
      max-active: 10
      min-idle: 5
      max-wait: 60000
  thymeleaf:
    mode: LEGACYHTML5
    cache: false
    prefix: classpath:/templates/
    encoding: UTF-8
    suffix: .html
    content-type: text/html


feign:
  client:
    config:
      default:
        connect-timeout: 10000
        read-timeout: 20000

#  mvc:
#    view:
#      prefix: classpath:/templates/
#      suffix: .html

#============== kafka ===================
kafka:
  consumer:
    zookeeper:
      connect: dev.zk.java110.com:2181
    servers: dev.kafka.java110.com:9092
    enable:
      auto:
        commit: true
    session:
      timeout: 6000
    auto:
      commit:
        interval: 100
      offset:
        reset: latest
    topic: test
    group:
      id: notifyBusinessStatus
    concurrency: 10
  hcGovTopic: csxq

  producer:
    zookeeper:
      connect: dev.zk.java110.com:2181
    servers: dev.kafka.java110.com:9092
    retries: 0
    batch:
      size: 4096
    linger: 1
    buffer:
      memory: 40960

quartz:
  properties:
    org:
      quartz:
        scheduler:
          instanceName: clusteredScheduler
          instanceId: AUTO
        jobStore:
          class: org.quartz.impl.jdbcjobstore.JobStoreTX
          driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
          tablePrefix: qrtz_
          isClustered: false
          clusterCheckinInterval: 10000
          useProperties: false
        threadPool:
          class: org.quartz.simpl.SimpleThreadPool
          threadCount: 10
          threadPriority: 5
          threadsInheritContextClassLoaderOfInitializingThread: true
  job-store-type: jdbc